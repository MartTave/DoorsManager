import { LoggedManager } from "../../libs/LoggedManager.lib.avt";
import { DataFetcher } from "../../libs/DataFetcher.lib.avt";
import { MainStateManager } from "../../states/StateManager.state.avt";
import { DoorEdit } from "../../states/DoorEdit.state.avt";

export class Header extends Aventus.WebComponent implements Aventus.DefaultComponent {

    //#region static

    //#endregion


    //#region props

    //#endregion


    //#region variables
    
    @ViewElement()
    protected userLink!: HTMLAnchorElement;

    @ViewElement()
    protected header!: HTMLDivElement;
    @ViewElement()
    protected loginHeader!: HTMLDivElement;
	@ViewElement()
    protected actions!: HTMLDivElement;
    //#endregion


    //#region constructor

    //#endregion



    //#region methods
    @StateActive("^dashboard|users|doors$", MainStateManager)
    @StateInactive("^dashboard|users|doors$", MainStateManager)
    protected stateChanged() {
        const stateName = MainStateManager.getInstance().getState()?.name;
        const children = this.actions.children;
        for(let i = 0; i < children.length; i++) {
            const curr = children[i];
            if(curr.getAttribute("data-state") === stateName) {
                curr.classList.add("active");
            } else {
                curr.classList.remove("active");
            }
        }
    }


	@StateActive("login", MainStateManager)
	protected loginActive() {
		this.header.classList.remove("active");
		this.loginHeader.classList.add("active");
	}


	@StateInactive("login", MainStateManager)
	protected async loginInactive() {
		this.header.classList.add("active");
		this.loginHeader.classList.remove("active");
        if(await LoggedManager.getAdmin()) {
            this.userLink.style.display = "block";
        } else {
            this.userLink.style.display = "none";
        }
	}

    /**
     * 
     */
    protected async activateState(e) {
        if(e.target && e.target.dataset && e.target.dataset["state"]) {
            if(e.target.dataset["state"] === "logout") {
                const res = await DataFetcher.postAction("logout", {})
                if (res.success) {
                    MainStateManager.getInstance().setState("login")
                }
            } else {
                MainStateManager.getInstance().setState(e.target.dataset["state"]);
            }
        } else {
            console.log("Got a click on link but didn't found any data-state property to fallback to...");
        }
    }
    //#endregion

}